<Window x:Class="Snake.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Snake"
        mc:Ignorable="d"
        Title="Snake" Height="500" Width="800"
        Background="{StaticResource BackgrounColor}"
        Foreground="{StaticResource TextColor}"
        FontFamily="{StaticResource MainFont}"
        WindowStartupLocation="CenterScreen"
        Icon="Assets/icon.ico"
        MinHeight="300"
        MinWidth="300"
        KeyDown="Window_KeyDown" Closing="Window_Closing" MouseDown="Window_MouseDown"
        Focusable="True"
        >
    <Window.Resources>

        <Color x:Key="StdGray30" >#303030</Color>
        <SolidColorBrush x:Key="StdGray30Brush" Color="#303030"/>

        <Color x:Key="StdGray40" >#404040</Color>
        <SolidColorBrush x:Key="StdGray40Brush" Color="#404040"/>

        <!-- Converters -->
        <local:ValToLRMarginConverter x:Key="marginConverter"></local:ValToLRMarginConverter>

        <!-- DataGridColumnHeader -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="#666666"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource StdGray40Brush}"/>

        </Style>

        <!-- DataGrid -->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Margin" Value="0" />

            <Setter Property="Background" Value="{StaticResource StdGray30Brush}" />
            <Setter Property="RowHeaderWidth" Value="0" />
            <Setter Property="GridLinesVisibility" Value="None" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />

            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="IsHitTestVisible" Value="True" />
        </Style>

        <!-- DataGrid row alternating -->
        <AlternationConverter x:Key="BackgroundConverter">
            <SolidColorBrush Color="{StaticResource StdGray30}" />
            <SolidColorBrush Color="{StaticResource StdGray40}" />
        </AlternationConverter>

        <AlternationConverter x:Key="AlternateForegroundConverter">
            <SolidColorBrush Color="Black"/>
            <SolidColorBrush Color="Black"/>
        </AlternationConverter>

        <Style x:Key="alternatingWithBinding" TargetType="{x:Type DataGridRow}" >
            <Setter Property="Background" 
                 Value="{Binding RelativeSource={RelativeSource Self},
                 Path=(ItemsControl.AlternationIndex),
                 Converter={StaticResource BackgroundConverter}}"
            />
            <Setter Property="Foreground" 
                 Value="{Binding RelativeSource={RelativeSource Self},
                 Path=(ItemsControl.AlternationIndex),
                 Converter={StaticResource AlternateForegroundConverter}}"
            />
        </Style>

        <!-- DataGridCell -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">

            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" /> 
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="Transparent" BorderThickness="0">
                            <Border x:Name="border"
                              BorderBrush="White"
                              BorderThickness="1"
                              Background="Green"
                              CornerRadius="4">
                                <ContentPresenter />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Orange"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Settings button -->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="AliceBlue" Opacity="0.8"/>
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="ButtonBorder" Property="BorderBrush" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="DeepSkyBlue" Opacity="0.7"/>
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="ButtonBorder" Property="BorderThickness" >
                                    <Setter.Value>
                                        <Thickness Right="1" Top="1" Left="1" Bottom="1"/>
                                    </Setter.Value>

                                </Setter>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>


    <Viewbox>
        
        <Grid x:Name="MainGrid" Focusable="True" FocusVisualStyle="{x:Null}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="171*" />
                <RowDefinition Height="232*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button x:Name="ButtonSettings" Style="{StaticResource CustomButtonStyle}" BorderBrush="Transparent" Grid.Row="0" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Click="ButtonSettings_Click" Height="40" Width="40">
                <Button.Background>
                    <SolidColorBrush Color="Transparent"/>
                </Button.Background>

                <Image Source="/assets/SettingsIcon.png"></Image>

            </Button>

            <TextBlock x:Name="ScoreText"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Text="SCORE 0"
                   FontSize="22"
                   />

            <TextBlock x:Name="TextBlockCountdown" 
                       Grid.Row="1"
                       Panel.ZIndex="100"
                       IsHitTestVisible="False"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="30"    
                       Visibility="Collapsed"
               >

            </TextBlock>

            <Border x:Name="GridBorder"
                Grid.Row="1"
                BorderBrush="{StaticResource GridLineColor}"
                BorderThickness="1.5"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                RenderOptions.EdgeMode="Aliased" Grid.RowSpan="2"
                >

                <UniformGrid x:Name="GameGrid"
                         Width="400"
                         Height="400"
                         Background="{StaticResource GridBackgroundColor}"
                         SnapsToDevicePixels="True"
                         RenderOptions.BitmapScalingMode="HighQuality"
                         />
            </Border>

            <Border x:Name="OverlayDark"
                Width="{Binding Path=ActualWidth, ElementName=GridBorder}"
                Height="{Binding Path=ActualHeight, ElementName=GridBorder}"
                 Grid.Row="1"
                 Background="{StaticResource OverlayColor}"
                 
                 Margin="40,0,40,0"
                 RenderOptions.EdgeMode="Aliased"
                 Visibility="Visible" Grid.RowSpan="2"
                 IsHitTestVisible="False">

            </Border>
            
            <Border x:Name="OverlayEndGame"
                    Width="400"
                    Height="400"
                    Grid.Row="1"
                    Background="Transparent"
                    
                    Margin="40,0,40,0"
                    RenderOptions.EdgeMode="Aliased"
                    Focusable="True" Grid.RowSpan="2"
                    >
                <!--    Width="{Binding Path=ActualWidth, ElementName=GridBorder}"
Height="{Binding Path=ActualHeight, ElementName=GridBorder}"-->
                <!--Grid for overlay (leaderboard,score)-->
                <Grid Grid.Row="1" Grid.Column="0" Visibility="Visible">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!-- row 0 -->
                    <TextBlock x:Name="PressToStartText" Visibility="Visible"
                    FontWeight="Bold"
                    Text="PRESS ANY KEY TO START"
                    FontSize="26"
                    TextWrapping="Wrap" 
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Row="0"/>
                    <Grid Grid.Row="0" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="1" Orientation="Horizontal" >
                            <TextBlock Text="SCORE: " 
                                   FontSize="26" 
                                   />

                            <TextBlock x:Name="ScoreValue"
                                    Text="00"
                                    FontSize="26" 
                                    />
                        </StackPanel>
                    </Grid>

                    <!-- row 1 -->
                    <Grid Grid.Row="1"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        FlowDirection="LeftToRight"
                        Margin="5">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>


                        <TextBlock 
                            x:Name="NicknameTextBlock"
                        Text="NICKNAME: "
                        FontSize="18"
                        HorizontalAlignment="Right"
                        Grid.Column="0"
                        />

                        <!-- TextBox for nickname -->
                        <TextBox x:Name="NicknameTextBox"
                        HorizontalAlignment="Left"   
                        Margin="5,0,0,0"
                        Width="100"
                        Grid.Column="1"
                        />
                    </Grid>

                    <!-- row 2 -->
                    <Grid Grid.Row="2" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <!--AlternationCount="2" ItemContainerStyle="{StaticResource alternatingWithBinding}"-->
                        <DataGrid
                            ItemsSource="{Binding Leaderboard.PlayersScores}" 
                            
                            AlternationCount="2" 
                            Grid.Column="1" 
                            Grid.ColumnSpan="1"
                            

                            RowStyle="{StaticResource alternatingWithBinding}"
                            CellStyle="{StaticResource DataGridCellStyle}"
                            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                            Style="{StaticResource DataGridStyle}"
                            >

                            <DataGrid.Columns >
                                <DataGridTextColumn Width="*" Header="Nickname" Binding="{Binding Name}"/>
                                <DataGridTextColumn Width="*" Header="BestScore" Binding="{Binding BestScore}"/>
                            </DataGrid.Columns>

                        </DataGrid>
                    </Grid>

                </Grid>
            </Border>

        </Grid>
    </Viewbox>
</Window>
